#include <stdio.h>

#include <stdlib.h>

#include <string.h>



void merge(char **arr, int left, int mid, int right) {

    int i, j, k;

    int n1 = mid - left + 1;

    int n2 = right - mid;



    char **leftArr = (char **)malloc(n1 * sizeof(char *));

    char **rightArr = (char **)malloc(n2 * sizeof(char *));



    for (i = 0; i < n1; i++)

        leftArr[i] = arr[left + i];

    for (j = 0; j < n2; j++)

        rightArr[j] = arr[mid + 1 + j];



    i = 0;

    j = 0;

    k = left;

    while (i < n1 && j < n2) {

        if (strcmp(leftArr[i], rightArr[j]) <= 0) {

            arr[k] = leftArr[i];

            i++;

        } else {

            arr[k] = rightArr[j];

            j++;

        }

        k++;

    }



    while (i < n1) {

        arr[k] = leftArr[i];

        i++;

        k++;

    }



    while (j < n2) {

        arr[k] = rightArr[j];

        j++;

        k++;

    }



    free(leftArr);

    free(rightArr);

}



void mergeSort(char **arr, int left, int right) {

    if (left < right) {

        int mid = left + (right - left) / 2;



        mergeSort(arr, left, mid);

        mergeSort(arr, mid + 1, right);



        merge(arr, left, mid, right);

    }

}



int main() {

    int n;

    printf("Enter the number of mobile numbers: ");

    scanf("%d", &n);



    char **mobileNumbers = (char **)malloc(n * sizeof(char *));

    printf("Enter the mobile numbers:\n");

    for (int i = 0; i < n; i++) {

        mobileNumbers[i] = (char *)malloc(12 * sizeof(char)); // Assuming each number is at most 11 characters

        scanf("%s", mobileNumbers[i]);

    }



    mergeSort(mobileNumbers, 0, n - 1);



    printf("\nSorted mobile numbers:\n");

    for (int i = 0; i < n; i++) {

        printf("%s\n", mobileNumbers[i]);

        free(mobileNumbers[i]);

    }

    free(mobileNumbers);



    return 0;

}

